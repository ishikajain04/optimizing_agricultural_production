# Lets split the Dataset for predictive modelling

y = data['label']
x = data.drop(['label'], axis = 1)

print("Shape of x:", x.shape)
print("Shape of y:", y.shape)

output:
"Shape of x: (2200, 7)
Shape of y: (2200,)"

# Lets create Training and Testing sets for Validation of results
from sklearn.model_selection import train_test_split

x_train, x_test, y_train, y_test = train_test_split(x , y , test_size = 0.2, random_state = 0)

print("The shape of x train : ", x_train.shape)
print("The shape of x test : ", x_test.shape)
print("The shape of y train : ", y_train.shape)
print("The shape of x test : ", y_test.shape)

output:
"The shape of x train :  (1760, 7)
The shape of x test :  (440, 7)
The shape of y train :  (1760,)
The shape of x test :  (440,)"


# lets create a Predictive model

from sklearn.linear_model import LogisticRegression

model = LogisticRegression()
model.fit(x_train, y_train)
y_pred = model.predict(x_test)


# lets evaluate the model performance

from sklearn.metrics import confusion_matrix

#lets print the confusion matrix first
plt.rcParams['figure.figsize'] = (10,10)
cm = confusion_matrix(y_test, y_pred)
sns.heatmap(cm, annot = True, cmap = 'Wistia')
plt.title('Confusion Matrix for Logistic Regression', fontsize = 15)
plt.show()

output:
""

# lets print the classification Report also

cr = classification_report(y_test, y_pred)
print(cr)

# lets check the head of the dataset

data.head()

output:
"	N	P	K	temperature	humidity	ph	rainfall	label
0	90	42	43	20.879744	82.002744	6.502985	202.935536	rice
1	85	58	41	21.770462	80.319644	7.038096	226.655537	rice
2	60	55	44	23.004459	82.320763	7.840207	263.964248	rice
3	74	35	40	26.491096	80.158363	6.980401	242.864034	rice
4	78	42	42	20.130175	81.604873	7.628473	262.717340	rice"

prediction = model.predict((np.array([[90,
                                       40,
                                       40,
                                       20,
                                       80,
                                       7,
                                       200]])))
print("The suggested  Crop for the given Climatic Conditions is : ", prediction)

output:
"The suggested  Crop for the given Climatic Conditions is :  ['rice']"
